---
import ThemeToggle from './ThemeToggle.astro';

const currentPath = Astro.url.pathname;
const baseUrl = import.meta.env.BASE_URL;

// Ensure base URL has proper trailing slash
const cleanBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;

const navItems = [
  { href: `${cleanBaseUrl}/`, label: 'Home' },
  { href: `${cleanBaseUrl}/projects/`, label: 'Projects' },
  { href: `${cleanBaseUrl}/downloads/`, label: 'Downloads' },
];
---

<nav class="bg-white dark:bg-gray-900 shadow-sm border-b border-gray-200 dark:border-gray-700">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex items-center">
        <a href={`${cleanBaseUrl}/`} class="flex-shrink-0 flex items-center">
          <span class="text-2xl font-bold neon-text hover:scale-105 transition-transform duration-200">ColinGamez</span>
        </a>
      </div>
      
      <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
        {navItems.map(item => (
          <a
            href={item.href}
            class={`inline-flex items-center px-1 pt-1 text-sm font-medium border-b-2 transition-colors duration-200 ${
              currentPath === item.href || (item.href === `${cleanBaseUrl}/` && currentPath === `${cleanBaseUrl}/`)
                ? 'border-primary-500 text-gray-900 dark:text-white'
                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
      
      <div class="flex items-center space-x-4">
        <ThemeToggle />
        <button
          id="mobile-menu-toggle"
          class="sm:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
          aria-label="Toggle menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden sm:hidden">
      <div class="pt-2 pb-3 space-y-1">
        {navItems.map(item => (
          <a
            href={item.href}
            class={`block pl-3 pr-4 py-2 text-base font-medium border-l-4 transition-colors duration-200 ${
              currentPath === item.href || (item.href === `${cleanBaseUrl}/` && currentPath === `${cleanBaseUrl}/`)
                ? 'border-primary-500 text-primary-700 bg-primary-50 dark:text-primary-400 dark:bg-primary-900/20'
                : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-gray-800'
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  
  mobileMenuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>